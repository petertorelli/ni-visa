/**
 * Copyright (C) Peter Torelli
 *
 * Licensed under Apache 2.0
 * 
 * Constants for the VISA Library 5.8 Specification by National Instruments
 */

const constants = {

	VI_ERROR: (0x80000000),

	VI_SPEC_VERSION: (0x00500800),

	VI_ATTR_RSRC_CLASS: (0xBFFF0001),
	VI_ATTR_RSRC_NAME: (0xBFFF0002),
	VI_ATTR_RSRC_IMPL_VERSION: (0x3FFF0003),
	VI_ATTR_RSRC_LOCK_STATE: (0x3FFF0004),
	VI_ATTR_MAX_QUEUE_LENGTH: (0x3FFF0005),
	VI_ATTR_USER_DATA_32: (0x3FFF0007),
	VI_ATTR_FDC_CHNL: (0x3FFF000D),
	VI_ATTR_FDC_MODE: (0x3FFF000F),
	VI_ATTR_FDC_GEN_SIGNAL_EN: (0x3FFF0011),
	VI_ATTR_FDC_USE_PAIR: (0x3FFF0013),
	VI_ATTR_SEND_END_EN: (0x3FFF0016),
	VI_ATTR_TERMCHAR: (0x3FFF0018),
	VI_ATTR_TMO_VALUE: (0x3FFF001A),
	VI_ATTR_GPIB_READDR_EN: (0x3FFF001B),
	VI_ATTR_IO_PROT: (0x3FFF001C),
	VI_ATTR_DMA_ALLOW_EN: (0x3FFF001E),
	VI_ATTR_ASRL_BAUD: (0x3FFF0021),
	VI_ATTR_ASRL_DATA_BITS: (0x3FFF0022),
	VI_ATTR_ASRL_PARITY: (0x3FFF0023),
	VI_ATTR_ASRL_STOP_BITS: (0x3FFF0024),
	VI_ATTR_ASRL_FLOW_CNTRL: (0x3FFF0025),
	VI_ATTR_RD_BUF_OPER_MODE: (0x3FFF002A),
	VI_ATTR_RD_BUF_SIZE: (0x3FFF002B),
	VI_ATTR_WR_BUF_OPER_MODE: (0x3FFF002D),
	VI_ATTR_WR_BUF_SIZE: (0x3FFF002E),
	VI_ATTR_SUPPRESS_END_EN: (0x3FFF0036),
	VI_ATTR_TERMCHAR_EN: (0x3FFF0038),
	VI_ATTR_DEST_ACCESS_PRIV: (0x3FFF0039),
	VI_ATTR_DEST_BYTE_ORDER: (0x3FFF003A),
	VI_ATTR_SRC_ACCESS_PRIV: (0x3FFF003C),
	VI_ATTR_SRC_BYTE_ORDER: (0x3FFF003D),
	VI_ATTR_SRC_INCREMENT: (0x3FFF0040),
	VI_ATTR_DEST_INCREMENT: (0x3FFF0041),
	VI_ATTR_WIN_ACCESS_PRIV: (0x3FFF0045),
	VI_ATTR_WIN_BYTE_ORDER: (0x3FFF0047),
	VI_ATTR_GPIB_ATN_STATE: (0x3FFF0057),
	VI_ATTR_GPIB_ADDR_STATE: (0x3FFF005C),
	VI_ATTR_GPIB_CIC_STATE: (0x3FFF005E),
	VI_ATTR_GPIB_NDAC_STATE: (0x3FFF0062),
	VI_ATTR_GPIB_SRQ_STATE: (0x3FFF0067),
	VI_ATTR_GPIB_SYS_CNTRL_STATE: (0x3FFF0068),
	VI_ATTR_GPIB_HS488_CBL_LEN: (0x3FFF0069),
	VI_ATTR_CMDR_LA: (0x3FFF006B),
	VI_ATTR_VXI_DEV_CLASS: (0x3FFF006C),
	VI_ATTR_MAINFRAME_LA: (0x3FFF0070),
	VI_ATTR_MANF_NAME: (0xBFFF0072),
	VI_ATTR_MODEL_NAME: (0xBFFF0077),
	VI_ATTR_VXI_VME_INTR_STATUS: (0x3FFF008B),
	VI_ATTR_VXI_TRIG_STATUS: (0x3FFF008D),
	VI_ATTR_VXI_VME_SYSFAIL_STATE: (0x3FFF0094),
	VI_ATTR_WIN_BASE_ADDR_32: (0x3FFF0098),
	VI_ATTR_WIN_SIZE_32: (0x3FFF009A),
	VI_ATTR_ASRL_AVAIL_NUM: (0x3FFF00AC),
	VI_ATTR_MEM_BASE_32: (0x3FFF00AD),
	VI_ATTR_ASRL_CTS_STATE: (0x3FFF00AE),
	VI_ATTR_ASRL_DCD_STATE: (0x3FFF00AF),
	VI_ATTR_ASRL_DSR_STATE: (0x3FFF00B1),
	VI_ATTR_ASRL_DTR_STATE: (0x3FFF00B2),
	VI_ATTR_ASRL_END_IN: (0x3FFF00B3),
	VI_ATTR_ASRL_END_OUT: (0x3FFF00B4),
	VI_ATTR_ASRL_REPLACE_CHAR: (0x3FFF00BE),
	VI_ATTR_ASRL_RI_STATE: (0x3FFF00BF),
	VI_ATTR_ASRL_RTS_STATE: (0x3FFF00C0),
	VI_ATTR_ASRL_XON_CHAR: (0x3FFF00C1),
	VI_ATTR_ASRL_XOFF_CHAR: (0x3FFF00C2),
	VI_ATTR_WIN_ACCESS: (0x3FFF00C3),
	VI_ATTR_RM_SESSION: (0x3FFF00C4),
	VI_ATTR_VXI_LA: (0x3FFF00D5),
	VI_ATTR_MANF_ID: (0x3FFF00D9),
	VI_ATTR_MEM_SIZE_32: (0x3FFF00DD),
	VI_ATTR_MEM_SPACE: (0x3FFF00DE),
	VI_ATTR_MODEL_CODE: (0x3FFF00DF),
	VI_ATTR_SLOT: (0x3FFF00E8),
	VI_ATTR_INTF_INST_NAME: (0xBFFF00E9),
	VI_ATTR_IMMEDIATE_SERV: (0x3FFF0100),
	VI_ATTR_INTF_PARENT_NUM: (0x3FFF0101),
	VI_ATTR_RSRC_SPEC_VERSION: (0x3FFF0170),
	VI_ATTR_INTF_TYPE: (0x3FFF0171),
	VI_ATTR_GPIB_PRIMARY_ADDR: (0x3FFF0172),
	VI_ATTR_GPIB_SECONDARY_ADDR: (0x3FFF0173),
	VI_ATTR_RSRC_MANF_NAME: (0xBFFF0174),
	VI_ATTR_RSRC_MANF_ID: (0x3FFF0175),
	VI_ATTR_INTF_NUM: (0x3FFF0176),
	VI_ATTR_TRIG_ID: (0x3FFF0177),
	VI_ATTR_GPIB_REN_STATE: (0x3FFF0181),
	VI_ATTR_GPIB_UNADDR_EN: (0x3FFF0184),
	VI_ATTR_DEV_STATUS_BYTE: (0x3FFF0189),
	VI_ATTR_FILE_APPEND_EN: (0x3FFF0192),
	VI_ATTR_VXI_TRIG_SUPPORT: (0x3FFF0194),
	VI_ATTR_TCPIP_ADDR: (0xBFFF0195),
	VI_ATTR_TCPIP_HOSTNAME: (0xBFFF0196),
	VI_ATTR_TCPIP_PORT: (0x3FFF0197),
	VI_ATTR_TCPIP_DEVICE_NAME: (0xBFFF0199),
	VI_ATTR_TCPIP_NODELAY: (0x3FFF019A),
	VI_ATTR_TCPIP_KEEPALIVE: (0x3FFF019B),
	VI_ATTR_4882_COMPLIANT: (0x3FFF019F),
	VI_ATTR_USB_SERIAL_NUM: (0xBFFF01A0),
	VI_ATTR_USB_INTFC_NUM: (0x3FFF01A1),
	VI_ATTR_USB_PROTOCOL: (0x3FFF01A7),
	VI_ATTR_USB_MAX_INTR_SIZE: (0x3FFF01AF),
	VI_ATTR_PXI_DEV_NUM: (0x3FFF0201),
	VI_ATTR_PXI_FUNC_NUM: (0x3FFF0202),
	VI_ATTR_PXI_BUS_NUM: (0x3FFF0205),
	VI_ATTR_PXI_CHASSIS: (0x3FFF0206),
	VI_ATTR_PXI_SLOTPATH: (0xBFFF0207),
	VI_ATTR_PXI_SLOT_LBUS_LEFT: (0x3FFF0208),
	VI_ATTR_PXI_SLOT_LBUS_RIGHT: (0x3FFF0209),
	VI_ATTR_PXI_TRIG_BUS: (0x3FFF020A),
	VI_ATTR_PXI_STAR_TRIG_BUS: (0x3FFF020B),
	VI_ATTR_PXI_STAR_TRIG_LINE: (0x3FFF020C),
	VI_ATTR_PXI_SRC_TRIG_BUS: (0x3FFF020D),
	VI_ATTR_PXI_DEST_TRIG_BUS: (0x3FFF020E),
	VI_ATTR_PXI_MEM_TYPE_BAR0: (0x3FFF0211),
	VI_ATTR_PXI_MEM_TYPE_BAR1: (0x3FFF0212),
	VI_ATTR_PXI_MEM_TYPE_BAR2: (0x3FFF0213),
	VI_ATTR_PXI_MEM_TYPE_BAR3: (0x3FFF0214),
	VI_ATTR_PXI_MEM_TYPE_BAR4: (0x3FFF0215),
	VI_ATTR_PXI_MEM_TYPE_BAR5: (0x3FFF0216),
	VI_ATTR_PXI_MEM_BASE_BAR0_32: (0x3FFF0221),
	VI_ATTR_PXI_MEM_BASE_BAR1_32: (0x3FFF0222),
	VI_ATTR_PXI_MEM_BASE_BAR2_32: (0x3FFF0223),
	VI_ATTR_PXI_MEM_BASE_BAR3_32: (0x3FFF0224),
	VI_ATTR_PXI_MEM_BASE_BAR4_32: (0x3FFF0225),
	VI_ATTR_PXI_MEM_BASE_BAR5_32: (0x3FFF0226),
	VI_ATTR_PXI_MEM_BASE_BAR0_64: (0x3FFF0228),
	VI_ATTR_PXI_MEM_BASE_BAR1_64: (0x3FFF0229),
	VI_ATTR_PXI_MEM_BASE_BAR2_64: (0x3FFF022A),
	VI_ATTR_PXI_MEM_BASE_BAR3_64: (0x3FFF022B),
	VI_ATTR_PXI_MEM_BASE_BAR4_64: (0x3FFF022C),
	VI_ATTR_PXI_MEM_BASE_BAR5_64: (0x3FFF022D),
	VI_ATTR_PXI_MEM_SIZE_BAR0_32: (0x3FFF0231),
	VI_ATTR_PXI_MEM_SIZE_BAR1_32: (0x3FFF0232),
	VI_ATTR_PXI_MEM_SIZE_BAR2_32: (0x3FFF0233),
	VI_ATTR_PXI_MEM_SIZE_BAR3_32: (0x3FFF0234),
	VI_ATTR_PXI_MEM_SIZE_BAR4_32: (0x3FFF0235),
	VI_ATTR_PXI_MEM_SIZE_BAR5_32: (0x3FFF0236),
	VI_ATTR_PXI_MEM_SIZE_BAR0_64: (0x3FFF0238),
	VI_ATTR_PXI_MEM_SIZE_BAR1_64: (0x3FFF0239),
	VI_ATTR_PXI_MEM_SIZE_BAR2_64: (0x3FFF023A),
	VI_ATTR_PXI_MEM_SIZE_BAR3_64: (0x3FFF023B),
	VI_ATTR_PXI_MEM_SIZE_BAR4_64: (0x3FFF023C),
	VI_ATTR_PXI_MEM_SIZE_BAR5_64: (0x3FFF023D),
	VI_ATTR_PXI_IS_EXPRESS: (0x3FFF0240),
	VI_ATTR_PXI_SLOT_LWIDTH: (0x3FFF0241),
	VI_ATTR_PXI_MAX_LWIDTH: (0x3FFF0242),
	VI_ATTR_PXI_ACTUAL_LWIDTH: (0x3FFF0243),
	VI_ATTR_PXI_DSTAR_BUS: (0x3FFF0244),
	VI_ATTR_PXI_DSTAR_SET: (0x3FFF0245),
	VI_ATTR_PXI_ALLOW_WRITE_COMBINE: (0x3FFF0246),
	VI_ATTR_TCPIP_HISLIP_OVERLAP_EN: (0x3FFF0300),
	VI_ATTR_TCPIP_HISLIP_VERSION: (0x3FFF0301),
	VI_ATTR_TCPIP_HISLIP_MAX_MESSAGE_KB: (0x3FFF0302),
	VI_ATTR_TCPIP_IS_HISLIP: (0x3FFF0303),

	VI_ATTR_JOB_ID: (0x3FFF4006),
	VI_ATTR_EVENT_TYPE: (0x3FFF4010),
	VI_ATTR_SIGP_STATUS_ID: (0x3FFF4011),
	VI_ATTR_RECV_TRIG_ID: (0x3FFF4012),
	VI_ATTR_INTR_STATUS_ID: (0x3FFF4023),
	VI_ATTR_STATUS: (0x3FFF4025),
	VI_ATTR_RET_COUNT_32: (0x3FFF4026),
	VI_ATTR_BUFFER: (0x3FFF4027),
	VI_ATTR_RECV_INTR_LEVEL: (0x3FFF4041),
	VI_ATTR_OPER_NAME: (0xBFFF4042),
	VI_ATTR_GPIB_RECV_CIC_STATE: (0x3FFF4193),
	VI_ATTR_RECV_TCPIP_ADDR: (0xBFFF4198),
	VI_ATTR_USB_RECV_INTR_SIZE: (0x3FFF41B0),
	VI_ATTR_USB_RECV_INTR_DATA: (0xBFFF41B1),
	VI_ATTR_PXI_RECV_INTR_SEQ: (0x3FFF4240),
	VI_ATTR_PXI_RECV_INTR_DATA: (0x3FFF4241),

/*- Attributes (platform dependent size) ------------------------------------*/

	VI_ATTR_USER_DATA_64: (0x3FFF000A),
	VI_ATTR_RET_COUNT_64: (0x3FFF4028),
	VI_ATTR_USER_DATA: (0x3FFF000A),
	VI_ATTR_RET_COUNT: (0x3FFF4028),


/*- Event Types -------------------------------------------------------------*/

	VI_EVENT_IO_COMPLETION: (0x3FFF2009),
	VI_EVENT_TRIG: (0xBFFF200A),
	VI_EVENT_SERVICE_REQ: (0x3FFF200B),
	VI_EVENT_CLEAR: (0x3FFF200D),
	VI_EVENT_EXCEPTION: (0xBFFF200E),
	VI_EVENT_GPIB_CIC: (0x3FFF2012),
	VI_EVENT_GPIB_TALK: (0x3FFF2013),
	VI_EVENT_GPIB_LISTEN: (0x3FFF2014),
	VI_EVENT_VXI_VME_SYSFAIL: (0x3FFF201D),
	VI_EVENT_VXI_VME_SYSRESET: (0x3FFF201E),
	VI_EVENT_VXI_SIGP: (0x3FFF2020),
	VI_EVENT_VXI_VME_INTR: (0xBFFF2021),
	VI_EVENT_PXI_INTR: (0x3FFF2022),
	VI_EVENT_TCPIP_CONNECT: (0x3FFF2036),
	VI_EVENT_USB_INTR: (0x3FFF2037),

	VI_ALL_ENABLED_EVENTS: (0x3FFF7FFF),

/*- Completion and Error Codes ----------------------------------------------*/

	VI_SUCCESS_EVENT_EN: (0x3FFF0002),
	VI_SUCCESS_EVENT_DIS: (0x3FFF0003),
	VI_SUCCESS_QUEUE_EMPTY: (0x3FFF0004),
	VI_SUCCESS_TERM_CHAR: (0x3FFF0005),
	VI_SUCCESS_MAX_CNT: (0x3FFF0006),
	VI_SUCCESS_DEV_NPRESENT: (0x3FFF007D),
	VI_SUCCESS_TRIG_MAPPED: (0x3FFF007E),
	VI_SUCCESS_QUEUE_NEMPTY: (0x3FFF0080),
	VI_SUCCESS_NCHAIN: (0x3FFF0098),
	VI_SUCCESS_NESTED_SHARED: (0x3FFF0099),
	VI_SUCCESS_NESTED_EXCLUSIVE: (0x3FFF009A),
	VI_SUCCESS_SYNC: (0x3FFF009B),

	VI_WARN_QUEUE_OVERFLOW: (0x3FFF000C),
	VI_WARN_CONFIG_NLOADED: (0x3FFF0077),
	VI_WARN_NULL_OBJECT: (0x3FFF0082),
	VI_WARN_NSUP_ATTR_STATE: (0x3FFF0084),
	VI_WARN_UNKNOWN_STATUS: (0x3FFF0085),
	VI_WARN_NSUP_BUF: (0x3FFF0088),
	VI_WARN_EXT_FUNC_NIMPL: (0x3FFF00A9),

	VI_ERROR_SYSTEM_ERROR: (0x80000000+0x3FFF0000),
	VI_ERROR_INV_OBJECT: (0x80000000+0x3FFF000E),
	VI_ERROR_RSRC_LOCKED: (0x80000000+0x3FFF000F),
	VI_ERROR_INV_EXPR: (0x80000000+0x3FFF0010),
	VI_ERROR_RSRC_NFOUND: (0x80000000+0x3FFF0011),
	VI_ERROR_INV_RSRC_NAME: (0x80000000+0x3FFF0012),
	VI_ERROR_INV_ACC_MODE: (0x80000000+0x3FFF0013),
	VI_ERROR_TMO: (0x80000000+0x3FFF0015),
	VI_ERROR_CLOSING_FAILED: (0x80000000+0x3FFF0016),
	VI_ERROR_INV_DEGREE: (0x80000000+0x3FFF001B),
	VI_ERROR_INV_JOB_ID: (0x80000000+0x3FFF001C),
	VI_ERROR_NSUP_ATTR: (0x80000000+0x3FFF001D),
	VI_ERROR_NSUP_ATTR_STATE: (0x80000000+0x3FFF001E),
	VI_ERROR_ATTR_READONLY: (0x80000000+0x3FFF001F),
	VI_ERROR_INV_LOCK_TYPE: (0x80000000+0x3FFF0020),
	VI_ERROR_INV_ACCESS_KEY: (0x80000000+0x3FFF0021),
	VI_ERROR_INV_EVENT: (0x80000000+0x3FFF0026),
	VI_ERROR_INV_MECH: (0x80000000+0x3FFF0027),
	VI_ERROR_HNDLR_NINSTALLED: (0x80000000+0x3FFF0028),
	VI_ERROR_INV_HNDLR_REF: (0x80000000+0x3FFF0029),
	VI_ERROR_INV_CONTEXT: (0x80000000+0x3FFF002A),
	VI_ERROR_QUEUE_OVERFLOW: (0x80000000+0x3FFF002D),
	VI_ERROR_NENABLED: (0x80000000+0x3FFF002F),
	VI_ERROR_ABORT: (0x80000000+0x3FFF0030),
	VI_ERROR_RAW_WR_PROT_VIOL: (0x80000000+0x3FFF0034),
	VI_ERROR_RAW_RD_PROT_VIOL: (0x80000000+0x3FFF0035),
	VI_ERROR_OUTP_PROT_VIOL: (0x80000000+0x3FFF0036),
	VI_ERROR_INP_PROT_VIOL: (0x80000000+0x3FFF0037),
	VI_ERROR_BERR: (0x80000000+0x3FFF0038),
	VI_ERROR_IN_PROGRESS: (0x80000000+0x3FFF0039),
	VI_ERROR_INV_SETUP: (0x80000000+0x3FFF003A),
	VI_ERROR_QUEUE_ERROR: (0x80000000+0x3FFF003B),
	VI_ERROR_ALLOC: (0x80000000+0x3FFF003C),
	VI_ERROR_INV_MASK: (0x80000000+0x3FFF003D),
	VI_ERROR_IO: (0x80000000+0x3FFF003E),
	VI_ERROR_INV_FMT: (0x80000000+0x3FFF003F),
	VI_ERROR_NSUP_FMT: (0x80000000+0x3FFF0041),
	VI_ERROR_LINE_IN_USE: (0x80000000+0x3FFF0042),
	VI_ERROR_LINE_NRESERVED: (0x80000000+0x3FFF0043),
	VI_ERROR_NSUP_MODE: (0x80000000+0x3FFF0046),
	VI_ERROR_SRQ_NOCCURRED: (0x80000000+0x3FFF004A),
	VI_ERROR_INV_SPACE: (0x80000000+0x3FFF004E),
	VI_ERROR_INV_OFFSET: (0x80000000+0x3FFF0051),
	VI_ERROR_INV_WIDTH: (0x80000000+0x3FFF0052),
	VI_ERROR_NSUP_OFFSET: (0x80000000+0x3FFF0054),
	VI_ERROR_NSUP_VAR_WIDTH: (0x80000000+0x3FFF0055),
	VI_ERROR_WINDOW_NMAPPED: (0x80000000+0x3FFF0057),
	VI_ERROR_RESP_PENDING: (0x80000000+0x3FFF0059),
	VI_ERROR_NLISTENERS: (0x80000000+0x3FFF005F),
	VI_ERROR_NCIC: (0x80000000+0x3FFF0060),
	VI_ERROR_NSYS_CNTLR: (0x80000000+0x3FFF0061),
	VI_ERROR_NSUP_OPER: (0x80000000+0x3FFF0067),
	VI_ERROR_INTR_PENDING: (0x80000000+0x3FFF0068),
	VI_ERROR_ASRL_PARITY: (0x80000000+0x3FFF006A),
	VI_ERROR_ASRL_FRAMING: (0x80000000+0x3FFF006B),
	VI_ERROR_ASRL_OVERRUN: (0x80000000+0x3FFF006C),
	VI_ERROR_TRIG_NMAPPED: (0x80000000+0x3FFF006E),
	VI_ERROR_NSUP_ALIGN_OFFSET: (0x80000000+0x3FFF0070),
	VI_ERROR_USER_BUF: (0x80000000+0x3FFF0071),
	VI_ERROR_RSRC_BUSY: (0x80000000+0x3FFF0072),
	VI_ERROR_NSUP_WIDTH: (0x80000000+0x3FFF0076),
	VI_ERROR_INV_PARAMETER: (0x80000000+0x3FFF0078),
	VI_ERROR_INV_PROT: (0x80000000+0x3FFF0079),
	VI_ERROR_INV_SIZE: (0x80000000+0x3FFF007B),
	VI_ERROR_WINDOW_MAPPED: (0x80000000+0x3FFF0080),
	VI_ERROR_NIMPL_OPER: (0x80000000+0x3FFF0081),
	VI_ERROR_INV_LENGTH: (0x80000000+0x3FFF0083),
	VI_ERROR_INV_MODE: (0x80000000+0x3FFF0091),
	VI_ERROR_SESN_NLOCKED: (0x80000000+0x3FFF009C),
	VI_ERROR_MEM_NSHARED: (0x80000000+0x3FFF009D),
	VI_ERROR_LIBRARY_NFOUND: (0x80000000+0x3FFF009E),
	VI_ERROR_NSUP_INTR: (0x80000000+0x3FFF009F),
	VI_ERROR_INV_LINE: (0x80000000+0x3FFF00A0),
	VI_ERROR_FILE_ACCESS: (0x80000000+0x3FFF00A1),
	VI_ERROR_FILE_IO: (0x80000000+0x3FFF00A2),
	VI_ERROR_NSUP_LINE: (0x80000000+0x3FFF00A3),
	VI_ERROR_NSUP_MECH: (0x80000000+0x3FFF00A4),
	VI_ERROR_INTF_NUM_NCONFIG: (0x80000000+0x3FFF00A5),
	VI_ERROR_CONN_LOST: (0x80000000+0x3FFF00A6),
	VI_ERROR_MACHINE_NAVAIL: (0x80000000+0x3FFF00A7),
	VI_ERROR_NPERMISSION: (0x80000000+0x3FFF00A8),

/*- Other VISA Definitions --------------------------------------------------*/

	VI_VERSION_MAJOR:    ((0x00500800 & 0xFFF00000) >> 20),
	VI_VERSION_MINOR:    ((0x00500800 & 0x000FFF00) >>  8),
	VI_VERSION_SUBMINOR: ((0x00500800 & 0x000000FF)      ),

	VI_FIND_BUFLEN: (256),

	VI_INTF_GPIB: (1),
	VI_INTF_VXI: (2),
	VI_INTF_GPIB_VXI: (3),
	VI_INTF_ASRL: (4),
	VI_INTF_PXI: (5),
	VI_INTF_TCPIP: (6),
	VI_INTF_USB: (7),

	VI_PROT_NORMAL: (1),
	VI_PROT_FDC: (2),
	VI_PROT_HS488: (3),
	VI_PROT_4882_STRS: (4),
	VI_PROT_USBTMC_VENDOR: (5),

	VI_FDC_NORMAL: (1),
	VI_FDC_STREAM: (2),

	VI_LOCAL_SPACE: (0),
	VI_A16_SPACE: (1),
	VI_A24_SPACE: (2),
	VI_A32_SPACE: (3),
	VI_A64_SPACE: (4),
	VI_PXI_ALLOC_SPACE: (9),
	VI_PXI_CFG_SPACE: (10),
	VI_PXI_BAR0_SPACE: (11),
	VI_PXI_BAR1_SPACE: (12),
	VI_PXI_BAR2_SPACE: (13),
	VI_PXI_BAR3_SPACE: (14),
	VI_PXI_BAR4_SPACE: (15),
	VI_PXI_BAR5_SPACE: (16),
	VI_OPAQUE_SPACE: (0xFFFF),

	VI_UNKNOWN_LA: (-1),
	VI_UNKNOWN_SLOT: (-1),
	VI_UNKNOWN_LEVEL: (-1),
	VI_UNKNOWN_CHASSIS: (-1),

	VI_QUEUE: (1),
	VI_HNDLR: (2),
	VI_SUSPEND_HNDLR: (4),
	VI_ALL_MECH: (0xFFFF),

	VI_ANY_HNDLR: (0),

	VI_TRIG_ALL: (-2),
	VI_TRIG_SW: (-1),
	VI_TRIG_TTL0: (0),
	VI_TRIG_TTL1: (1),
	VI_TRIG_TTL2: (2),
	VI_TRIG_TTL3: (3),
	VI_TRIG_TTL4: (4),
	VI_TRIG_TTL5: (5),
	VI_TRIG_TTL6: (6),
	VI_TRIG_TTL7: (7),
	VI_TRIG_ECL0: (8),
	VI_TRIG_ECL1: (9),
	VI_TRIG_ECL2: (10),
	VI_TRIG_ECL3: (11),
	VI_TRIG_ECL4: (12),
	VI_TRIG_ECL5: (13),
	VI_TRIG_STAR_SLOT1: (14),
	VI_TRIG_STAR_SLOT2: (15),
	VI_TRIG_STAR_SLOT3: (16),
	VI_TRIG_STAR_SLOT4: (17),
	VI_TRIG_STAR_SLOT5: (18),
	VI_TRIG_STAR_SLOT6: (19),
	VI_TRIG_STAR_SLOT7: (20),
	VI_TRIG_STAR_SLOT8: (21),
	VI_TRIG_STAR_SLOT9: (22),
	VI_TRIG_STAR_SLOT10: (23),
	VI_TRIG_STAR_SLOT11: (24),
	VI_TRIG_STAR_SLOT12: (25),
	VI_TRIG_STAR_INSTR: (26),
	VI_TRIG_PANEL_IN: (27),
	VI_TRIG_PANEL_OUT: (28),
	VI_TRIG_STAR_VXI0: (29),
	VI_TRIG_STAR_VXI1: (30),
	VI_TRIG_STAR_VXI2: (31),
	VI_TRIG_TTL8: (32),
	VI_TRIG_TTL9: (33),
	VI_TRIG_TTL10: (34),
	VI_TRIG_TTL11: (35),

	VI_TRIG_PROT_DEFAULT: (0),
	VI_TRIG_PROT_ON: (1),
	VI_TRIG_PROT_OFF: (2),
	VI_TRIG_PROT_SYNC: (5),
	VI_TRIG_PROT_RESERVE: (6),
	VI_TRIG_PROT_UNRESERVE: (7),

	VI_READ_BUF: (1),
	VI_WRITE_BUF: (2),
	VI_READ_BUF_DISCARD: (4),
	VI_WRITE_BUF_DISCARD: (8),
	VI_IO_IN_BUF: (16),
	VI_IO_OUT_BUF: (32),
	VI_IO_IN_BUF_DISCARD: (64),
	VI_IO_OUT_BUF_DISCARD: (128),

	VI_FLUSH_ON_ACCESS: (1),
	VI_FLUSH_WHEN_FULL: (2),
	VI_FLUSH_DISABLE: (3),

	VI_NMAPPED: (1),
	VI_USE_OPERS: (2),
	VI_DEREF_ADDR: (3),
	VI_DEREF_ADDR_BYTE_SWAP: (4),

	VI_TMO_IMMEDIATE: (0),
	VI_TMO_INFINITE: (0xFFFFFFFF),

	VI_NO_LOCK: (0),
	VI_EXCLUSIVE_LOCK: (1),
	VI_SHARED_LOCK: (2),
	VI_LOAD_CONFIG: (4),

	VI_NO_SEC_ADDR: (0xFFFF),

	VI_ASRL_PAR_NONE: (0),
	VI_ASRL_PAR_ODD: (1),
	VI_ASRL_PAR_EVEN: (2),
	VI_ASRL_PAR_MARK: (3),
	VI_ASRL_PAR_SPACE: (4),

	VI_ASRL_STOP_ONE: (10),
	VI_ASRL_STOP_ONE5: (15),
	VI_ASRL_STOP_TWO: (20),

	VI_ASRL_FLOW_NONE: (0),
	VI_ASRL_FLOW_XON_XOFF: (1),
	VI_ASRL_FLOW_RTS_CTS: (2),
	VI_ASRL_FLOW_DTR_DSR: (4),

	VI_ASRL_END_NONE: (0),
	VI_ASRL_END_LAST_BIT: (1),
	VI_ASRL_END_TERMCHAR: (2),
	VI_ASRL_END_BREAK: (3),

	VI_STATE_ASSERTED: (1),
	VI_STATE_UNASSERTED: (0),
	VI_STATE_UNKNOWN: (-1),

	VI_BIG_ENDIAN: (0),
	VI_LITTLE_ENDIAN: (1),

	VI_DATA_PRIV: (0),
	VI_DATA_NPRIV: (1),
	VI_PROG_PRIV: (2),
	VI_PROG_NPRIV: (3),
	VI_BLCK_PRIV: (4),
	VI_BLCK_NPRIV: (5),
	VI_D64_PRIV: (6),
	VI_D64_NPRIV: (7),
	VI_D64_2EVME: (8),
	VI_D64_SST160: (9),
	VI_D64_SST267: (10),
	VI_D64_SST320: (11),

	VI_WIDTH_8: (1),
	VI_WIDTH_16: (2),
	VI_WIDTH_32: (4),
	VI_WIDTH_64: (8),

	VI_GPIB_REN_DEASSERT: (0),
	VI_GPIB_REN_ASSERT: (1),
	VI_GPIB_REN_DEASSERT_GTL: (2),
	VI_GPIB_REN_ASSERT_ADDRESS: (3),
	VI_GPIB_REN_ASSERT_LLO: (4),
	VI_GPIB_REN_ASSERT_ADDRESS_LLO: (5),
	VI_GPIB_REN_ADDRESS_GTL: (6),

	VI_GPIB_ATN_DEASSERT: (0),
	VI_GPIB_ATN_ASSERT: (1),
	VI_GPIB_ATN_DEASSERT_HANDSHAKE: (2),
	VI_GPIB_ATN_ASSERT_IMMEDIATE: (3),

	VI_GPIB_HS488_DISABLED: (0),
	VI_GPIB_HS488_NIMPL: (-1),

	VI_GPIB_UNADDRESSED: (0),
	VI_GPIB_TALKER: (1),
	VI_GPIB_LISTENER: (2),

	VI_VXI_CMD16: (0x0200),
	VI_VXI_CMD16_RESP16: (0x0202),
	VI_VXI_RESP16: (0x0002),
	VI_VXI_CMD32: (0x0400),
	VI_VXI_CMD32_RESP16: (0x0402),
	VI_VXI_CMD32_RESP32: (0x0404),
	VI_VXI_RESP32: (0x0004),

	VI_ASSERT_SIGNAL: (-1),
	VI_ASSERT_USE_ASSIGNED: (0),
	VI_ASSERT_IRQ1: (1),
	VI_ASSERT_IRQ2: (2),
	VI_ASSERT_IRQ3: (3),
	VI_ASSERT_IRQ4: (4),
	VI_ASSERT_IRQ5: (5),
	VI_ASSERT_IRQ6: (6),
	VI_ASSERT_IRQ7: (7),

	VI_UTIL_ASSERT_SYSRESET: (1),
	VI_UTIL_ASSERT_SYSFAIL: (2),
	VI_UTIL_DEASSERT_SYSFAIL: (3),

	VI_VXI_CLASS_MEMORY: (0),
	VI_VXI_CLASS_EXTENDED: (1),
	VI_VXI_CLASS_MESSAGE: (2),
	VI_VXI_CLASS_REGISTER: (3),
	VI_VXI_CLASS_OTHER: (4),

	VI_PXI_ADDR_NONE: (0),
	VI_PXI_ADDR_MEM: (1),
	VI_PXI_ADDR_IO: (2),
	VI_PXI_ADDR_CFG: (3),

	VI_TRIG_UNKNOWN: (-1),

	VI_PXI_LBUS_UNKNOWN: (-1),
	VI_PXI_LBUS_NONE: (0),
	VI_PXI_LBUS_STAR_TRIG_BUS_0: (1000),
	VI_PXI_LBUS_STAR_TRIG_BUS_1: (1001),
	VI_PXI_LBUS_STAR_TRIG_BUS_2: (1002),
	VI_PXI_LBUS_STAR_TRIG_BUS_3: (1003),
	VI_PXI_LBUS_STAR_TRIG_BUS_4: (1004),
	VI_PXI_LBUS_STAR_TRIG_BUS_5: (1005),
	VI_PXI_LBUS_STAR_TRIG_BUS_6: (1006),
	VI_PXI_LBUS_STAR_TRIG_BUS_7: (1007),
	VI_PXI_LBUS_STAR_TRIG_BUS_8: (1008),
	VI_PXI_LBUS_STAR_TRIG_BUS_9: (1009),
	VI_PXI_STAR_TRIG_CONTROLLER: (1413),

/*- National Instruments ----------------------------------------------------*/

	VI_ERROR_HW_NGENUINE: (0x80000000+0x3FFF00AA),

	VI_INTF_RIO: (8),
	VI_INTF_FIREWIRE: (9),

	VI_ATTR_SYNC_MXI_ALLOW_EN: (0x3FFF0161),

/* This is for VXI SERVANT resources */

	VI_EVENT_VXI_DEV_CMD: (0xBFFF200F),
	VI_ATTR_VXI_DEV_CMD_TYPE: (0x3FFF4037),
	VI_ATTR_VXI_DEV_CMD_VALUE: (0x3FFF4038),

	VI_VXI_DEV_CMD_TYPE_16: (16),
	VI_VXI_DEV_CMD_TYPE_32: (32),

/* mode values include VI_VXI_RESP16, VI_VXI_RESP32, and the next 2 values */
	VI_VXI_RESP_NONE: (0),
	VI_VXI_RESP_PROT_ERROR: (-1),

/* This is for VXI TTL Trigger routing */

	VI_ATTR_VXI_TRIG_LINES_EN: (0x3FFF4043),
	VI_ATTR_VXI_TRIG_DIR: (0x3FFF4044),

/* This allows extended Serial support on Win32 and on NI ENET Serial products */

	VI_ATTR_ASRL_DISCARD_NULL: (0x3FFF00B0),
	VI_ATTR_ASRL_CONNECTED: (0x3FFF01BB),
	VI_ATTR_ASRL_BREAK_STATE: (0x3FFF01BC),
	VI_ATTR_ASRL_BREAK_LEN: (0x3FFF01BD),
	VI_ATTR_ASRL_ALLOW_TRANSMIT: (0x3FFF01BE),
	VI_ATTR_ASRL_WIRE_MODE: (0x3FFF01BF),

	VI_ASRL_WIRE_485_4: (0),
	VI_ASRL_WIRE_485_2_DTR_ECHO: (1),
	VI_ASRL_WIRE_485_2_DTR_CTRL: (2),
	VI_ASRL_WIRE_485_2_AUTO: (3),
	VI_ASRL_WIRE_232_DTE: (128),
	VI_ASRL_WIRE_232_DCE: (129),
	VI_ASRL_WIRE_232_AUTO: (130),

	VI_EVENT_ASRL_BREAK: (0x3FFF2023),
	VI_EVENT_ASRL_CTS: (0x3FFF2029),
	VI_EVENT_ASRL_DSR: (0x3FFF202A),
	VI_EVENT_ASRL_DCD: (0x3FFF202C),
	VI_EVENT_ASRL_RI: (0x3FFF202E),
	VI_EVENT_ASRL_CHAR: (0x3FFF2035),
	VI_EVENT_ASRL_TERMCHAR: (0x3FFF2024),

/* This is for fast viPeek/viPoke macros */

	VI_ATTR_PXI_SUB_MANF_ID: (0x3FFF0203),
	VI_ATTR_PXI_SUB_MODEL_CODE: (0x3FFF0204),

	VI_ATTR_PXI_USE_PREALLOC_POOL: (0x3FFF020F),

	VI_ATTR_USB_BULK_OUT_PIPE: (0x3FFF01A2),
	VI_ATTR_USB_BULK_IN_PIPE: (0x3FFF01A3),
	VI_ATTR_USB_INTR_IN_PIPE: (0x3FFF01A4),
	VI_ATTR_USB_CLASS: (0x3FFF01A5),
	VI_ATTR_USB_SUBCLASS: (0x3FFF01A6),
	VI_ATTR_USB_ALT_SETTING: (0x3FFF01A8),
	VI_ATTR_USB_END_IN: (0x3FFF01A9),
	VI_ATTR_USB_NUM_INTFCS: (0x3FFF01AA),
	VI_ATTR_USB_NUM_PIPES: (0x3FFF01AB),
	VI_ATTR_USB_BULK_OUT_STATUS: (0x3FFF01AC),
	VI_ATTR_USB_BULK_IN_STATUS: (0x3FFF01AD),
	VI_ATTR_USB_INTR_IN_STATUS: (0x3FFF01AE),
	VI_ATTR_USB_CTRL_PIPE: (0x3FFF01B0),

	VI_USB_PIPE_STATE_UNKNOWN: (-1),
	VI_USB_PIPE_READY: (0),
	VI_USB_PIPE_STALLED: (1),

	VI_USB_END_NONE: (0),
	VI_USB_END_SHORT: (4),
	VI_USB_END_SHORT_OR_COUNT: (5),

	VI_ATTR_FIREWIRE_DEST_UPPER_OFFSET: (0x3FFF01F0),
	VI_ATTR_FIREWIRE_SRC_UPPER_OFFSET: (0x3FFF01F1),
	VI_ATTR_FIREWIRE_WIN_UPPER_OFFSET: (0x3FFF01F2),
	VI_ATTR_FIREWIRE_VENDOR_ID: (0x3FFF01F3),
	VI_ATTR_FIREWIRE_LOWER_CHIP_ID: (0x3FFF01F4),
	VI_ATTR_FIREWIRE_UPPER_CHIP_ID: (0x3FFF01F5),

	VI_FIREWIRE_DFLT_SPACE: (5),
};

/**
 * Only works for SUCCESS, WARN, ERROR since they are unique. Also need to 
 * convert signed since es6 doesn't interpret bit 31 as the sign bit natively,
 * e.g.:
 * 0xBFFF000E = 0x80000000 + 0x3FFF000E = VI_ERROR_INV_OBJECT
 *            = 3221159950
 *            = -1073807346
 * Returns text string or null
 */
function decodeStatus (code) {
	let key = null;
	Object.keys(constants).some((x, y) => {
		if (x.match(/^VI_(SUCCESS|WARN|ERROR)/)) {
			if (code == constants[x]) {
				key = x;
				return true;
			}
		}
		return false;
	});
	return key;
}

module.exports = {
	constants,
	decodeStatus,
};
